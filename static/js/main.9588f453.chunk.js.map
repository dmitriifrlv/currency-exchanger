{"version":3,"sources":["Components/CurrencyRow/CurrencyRow.js","Components/CurrencyRow/Link.js","App.js","index.js"],"names":["currencyRow","props","currencies","selectedCurrency","onChangeCurrency","amount","onChangeAmount","type","value","onChange","map","option","Link","href","App","toAmount","fromAmount","useState","setCurrencies","fromCurrency","setFromCurrency","toCurrency","setToCurrency","setAmount","amountOfOriginalCurrency","setAmountOfOriginalCurrency","exchangeRate","setExchangeRate","text","setText","handleFromAmountChange","e","target","handleToAmountChange","useEffect","fetch","then","response","json","data","firstCurrency","Object","keys","rates","console","log","base","res","Number","parseFloat","toPrecision","onButtonSubmit","Date","values","toString","className","id","onClick","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0NAEe,SAASA,EAAYC,GAAQ,IAChCC,EAA2ED,EAA3EC,WAAYC,EAA+DF,EAA/DE,iBAAkBC,EAA6CH,EAA7CG,iBAAkBC,EAA2BJ,EAA3BI,OAAQC,EAAmBL,EAAnBK,eAChE,OACI,gCACE,uBACAC,KAAK,SACLC,MAAQH,EACRI,SAAUH,IACV,wBACAE,MAAOL,EACPM,SAAUL,EAFV,SAGKF,EAAWQ,KAAI,SAAAC,GAAM,OAClB,wBAAqBH,MAAOG,EAA5B,SAAqCA,GAAxBA,WCZhB,SAASC,EAAKX,GACzB,OACI,mBAAGY,KAAK,6GAAR,mCC+JOC,MA9Jf,WAAgB,IAUVC,EAAUC,EAVD,EACuBC,mBAAS,IADhC,mBACNf,EADM,KACMgB,EADN,OAE2BD,mBAAS,MAFpC,mBAENE,EAFM,KAEQC,EAFR,OAGuBH,mBAAS,MAHhC,mBAGNI,EAHM,KAGMC,EAHN,OAIeL,mBAAS,GAJxB,mBAINZ,EAJM,KAIEkB,EAJF,OAKmDN,oBAAS,GAL5D,mBAKNO,EALM,KAKoBC,EALpB,OAM2BR,qBAN3B,mBAMNS,EANM,KAMQC,EANR,OAOWV,mBAAS,IAPpB,mBAONW,EAPM,KAOAC,EAPA,KAwCf,SAASC,EAAuBC,GAC9BR,EAAUQ,EAAEC,OAAOxB,OACnBiB,GAA4B,GAG9B,SAASQ,EAAqBF,GAC5BR,EAAUQ,EAAEC,OAAOxB,OACnBiB,GAA4B,GApCtBD,GACFR,EAAaX,EACbU,EAAWV,EAASqB,IAEpBX,EAAWV,EACXW,EAAaX,EAASqB,GAG1BQ,qBAAU,WACRC,MAAO,0CACNC,MAAK,SAAAC,GAAQ,OAAEA,EAASC,UACxBF,MAAK,SAAAG,GACJ,IAAMC,EAAgBC,OAAOC,KAAKH,EAAKI,OAAO,GAC9CC,QAAQC,IAAIN,GACZrB,EAAc,CAACqB,EAAKO,MAAP,mBAAgBL,OAAOC,KAAKH,EAAKI,UAC9CvB,EAAgBmB,EAAKO,MACrBxB,EAAckB,GACdb,EAAgBY,EAAKI,MAAMH,SAE9B,IAEHN,qBAAU,WACJf,GAAgBE,GAClBc,MAAS,yCAAJ,gBAAqDhB,EAArD,oBAA6EE,IACjFe,MAAK,SAAAW,GAAG,OAAEA,EAAIT,UACdF,MAAK,SAAAG,GAAI,OAAEZ,EAAgBqB,OAAOC,WAAYV,EAAKI,MAAMtB,IAAc6B,YAAY,SAErF,CAAC/B,EAAcE,IAYlB,IAAM8B,EAAiB,WACrBtB,EAAQ,GAAD,OAAIb,GAAJ,OAAiBG,EAAjB,sBAA2CJ,GAA3C,OAAsDM,EAAtD,kBAA0E+B,OAA1E,6CAGT,OADAR,QAAQC,IAAuC,KAAnCJ,OAAOY,OAAO,CAACzB,SAAO0B,YACK,KAAnCb,OAAOY,OAAO,CAACzB,SAAO0B,WAEtB,sBAAKC,UAAU,OAAf,UACE,oDACE,sBAAKA,UAAU,MAAf,UACE,mBAAGA,UAAU,QAAb,qBACA,cAAC,EAAD,CACErD,WAAYA,EACZC,iBAAkBgB,EAClBf,iBAAkB,SAAA2B,GAAC,OAAIX,EAAgBW,EAAEC,OAAOxB,QAChDH,OAAQW,EACRV,eAAkBwB,EAClByB,UAAU,mBAGd,sBAAKA,UAAU,MAAf,UACE,mCACF,cAAC,EAAD,CACArD,WAAYA,EACZC,iBAAkBkB,EAClBjB,iBAAkB,SAAA2B,GAAC,OAAIT,EAAcS,EAAEC,OAAOxB,QAC9CH,OAAQU,EACRT,eAAkB2B,OAElB,qBAAKsB,UAAU,YAGf,sBAAKA,UAAU,MAAf,UACA,mBAAGC,GAAG,OAAN,4BAGC,8BACC,uBACEjD,KAAK,SACLiD,GAAG,gBACHhD,MAAOkB,SAKb,wBACAnB,KAAK,SACLkD,QAASN,EAFT,sBAKA,mBAAGK,GAAG,OAAN,SACG5B,OAML,sBAAK2B,UAAU,OAAf,UACE,oDACE,sBAAKA,UAAU,MAAf,UACE,mBAAGA,UAAU,QAAb,qBACA,cAAC,EAAD,CACErD,WAAYA,EACZC,iBAAkBgB,EAClBf,iBAAkB,SAAA2B,GAAC,OAAIX,EAAgBW,EAAEC,OAAOxB,QAChDH,OAAQW,EACRV,eAAkBwB,EAClByB,UAAU,mBAGd,sBAAKA,UAAU,MAAf,UACE,mCACF,cAAC,EAAD,CACArD,WAAYA,EACZC,iBAAkBkB,EAClBjB,iBAAkB,SAAA2B,GAAC,OAAIT,EAAcS,EAAEC,OAAOxB,QAC9CH,OAAQU,EACRT,eAAkB2B,OAElB,qBAAKsB,UAAU,YAGf,sBAAKA,UAAU,MAAf,UACA,mBAAGC,GAAG,OAAN,4BAGC,8BACC,uBACEjD,KAAK,SACLiD,GAAG,gBACHhD,MAAOkB,SAKb,wBACAnB,KAAK,SACLkD,QAASN,EAFT,sBAKA,oBAAGK,GAAG,OAAN,UACG5B,EADH,IACS,cAAChB,EAAD,IADT,WCtJN8C,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.9588f453.chunk.js","sourcesContent":["import React from 'react'\n\nexport default function currencyRow(props) {\n    const { currencies, selectedCurrency, onChangeCurrency, amount, onChangeAmount } = props;\n    return (\n        <div>\n          <input \n          type=\"number\" \n          value ={amount}\n          onChange={onChangeAmount}/>\n          <select \n          value={selectedCurrency}\n          onChange={onChangeCurrency}>\n              {currencies.map(option => (\n                  <option key={option} value={option}>{option}</option>\n              ))}   \n          </select>\n        </div>\n    )\n}\n","import React from 'react';\n\nexport default function Link(props) {\n    return (\n        <a href=\"https://www.ecb.europa.eu/stats/policy_and_exchange_rates/euro_reference_exchange_rates/html/index.en.html\">European Central Bank</a>\n    )\n}","import './App.css';\nimport React, { useState, useEffect } from 'react';\nimport CurrencyRow from './Components/CurrencyRow/CurrencyRow';\nimport Link from './Components/CurrencyRow/Link'\n\nfunction App() {\n  const [currencies, setCurrencies] = useState([]);\n  const [fromCurrency, setFromCurrency] = useState(null);\n  const [toCurrency, setToCurrency] = useState(null);\n  const [amount, setAmount] = useState(1)\n  const [amountOfOriginalCurrency, setAmountOfOriginalCurrency] = useState(true);\n  const [exchangeRate, setExchangeRate] = useState()\n  const [text, setText] = useState('');\n \n\n  let toAmount, fromAmount\n    if (amountOfOriginalCurrency) {\n      fromAmount = amount\n      toAmount = amount * exchangeRate\n    } else {\n      toAmount = amount;\n      fromAmount = amount / exchangeRate;\n    }\n\n  useEffect(()=>{\n    fetch ('https://api.exchangeratesapi.io/latest')\n    .then(response=>response.json())\n    .then(data=>{\n      const firstCurrency = Object.keys(data.rates)[0]\n      console.log(data)\n      setCurrencies([data.base, ...Object.keys(data.rates)])\n      setFromCurrency(data.base)\n      setToCurrency(firstCurrency)\n      setExchangeRate(data.rates[firstCurrency])\n    })\n}, [])\n\nuseEffect(() => {\n  if (fromCurrency && toCurrency) {\n    fetch(`${'https://api.exchangeratesapi.io/latest'}?base=${fromCurrency}&symbols=${toCurrency}`)\n    .then(res=>res.json())\n    .then(data=>setExchangeRate(Number.parseFloat((data.rates[toCurrency])).toPrecision(3)))\n  }\n}, [fromCurrency, toCurrency])\n\nfunction handleFromAmountChange(e) {\n  setAmount(e.target.value)\n  setAmountOfOriginalCurrency(true)\n} \n\nfunction handleToAmountChange(e) {\n  setAmount(e.target.value)\n  setAmountOfOriginalCurrency(false)\n} \n\nconst onButtonSubmit = () => {\n  setText(`${fromAmount}${fromCurrency} equals to ${toAmount}${toCurrency} as of ${Date()} according to the rate published by the`)\n}\nconsole.log(Object.values({text}).toString()===\"\")\nif (Object.values({text}).toString()===\"\") {\n  return (\n    <div className=\"Card\">\n      <h1>Currency Converter</h1>\n        <div className=\"row\">\n          <p className=\"label\">Convert</p>\n          <CurrencyRow \n            currencies={currencies}\n            selectedCurrency={fromCurrency}\n            onChangeCurrency={e => setFromCurrency(e.target.value)}\n            amount={fromAmount}\n            onChangeAmount = {handleFromAmountChange}\n            className=\"CurrencyRow\"/>\n        </div>\n\n        <div className=\"row\">\n          <p>To</p>\n        <CurrencyRow \n        currencies={currencies}\n        selectedCurrency={toCurrency}\n        onChangeCurrency={e => setToCurrency(e.target.value)}\n        amount={toAmount}\n        onChangeAmount = {handleToAmountChange}/>\n        </div>\n        <div className=\"sec-row\">\n        </div>\n\n        <div className=\"row\">\n        <p id=\"exch\">\n          Exchange Rate:\n        </p>\n         <div>\n          <input \n            type=\"number\" \n            id=\"exchange-rate\"\n            value={exchangeRate}\n          ></input>\n         </div>\n        </div>\n\n      <button\n      type=\"submit\"\n      onClick={onButtonSubmit}\n      >Exchange</button>\n\n      <p id=\"text\">\n        {text}\n      </p>\n    </div>\n  );  \n} else {\n  return (\n    <div className=\"Card\">\n      <h1>Currency Converter</h1>\n        <div className=\"row\">\n          <p className=\"label\">Convert</p>\n          <CurrencyRow \n            currencies={currencies}\n            selectedCurrency={fromCurrency}\n            onChangeCurrency={e => setFromCurrency(e.target.value)}\n            amount={fromAmount}\n            onChangeAmount = {handleFromAmountChange}\n            className=\"CurrencyRow\"/>\n        </div>\n\n        <div className=\"row\">\n          <p>To</p>\n        <CurrencyRow \n        currencies={currencies}\n        selectedCurrency={toCurrency}\n        onChangeCurrency={e => setToCurrency(e.target.value)}\n        amount={toAmount}\n        onChangeAmount = {handleToAmountChange}/>\n        </div>\n        <div className=\"sec-row\">\n        </div>\n\n        <div className=\"row\">\n        <p id=\"exch\">\n          Exchange Rate:\n        </p>\n         <div>\n          <input \n            type=\"number\" \n            id=\"exchange-rate\"\n            value={exchangeRate}\n          ></input>\n         </div>\n        </div>\n\n      <button\n      type=\"submit\"\n      onClick={onButtonSubmit}\n      >Exchange</button>\n\n      <p id=\"text\">\n        {text} <Link/>.\n      </p>\n    </div>\n  );\n}\n  \n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}