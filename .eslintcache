[{"/Users/dmitriifrolov/Desktop/currency-exchanger/src/index.js":"1","/Users/dmitriifrolov/Desktop/currency-exchanger/src/App.js":"2","/Users/dmitriifrolov/Desktop/currency-exchanger/src/Components/CurrencyRow/CurrencyRow.js":"3"},{"size":197,"mtime":1610632846739,"results":"4","hashOfConfig":"5"},{"size":3273,"mtime":1610794623703,"results":"6","hashOfConfig":"5"},{"size":571,"mtime":1610781144441,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"nrikpy",{"filePath":"11","messages":"12","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"13","usedDeprecatedRules":"10"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"/Users/dmitriifrolov/Desktop/currency-exchanger/src/index.js",[],["17","18"],"/Users/dmitriifrolov/Desktop/currency-exchanger/src/App.js",["19"],"import './App.css';\nimport React, { useState, useEffect } from 'react';\nimport CurrencyRow from './Components/CurrencyRow/CurrencyRow'\n\nfunction App() {\n  const [currencies, setCurrencies] = useState([]);\n  const [fromCurrency, setFromCurrency] = useState(null);\n  const [toCurrency, setToCurrency] = useState(null);\n  const [amount, setAmount] = useState(1)\n  const [amountOfOriginalCurrency, setAmountOfOriginalCurrency] = useState(true);\n  const [exchangeRate, setExchangeRate] = useState()\n  const [text, setText] = useState('');\n \n\n  let toAmount, fromAmount\n    if (amountOfOriginalCurrency) {\n      fromAmount = amount\n      toAmount = amount * exchangeRate\n    } else {\n      toAmount = amount;\n      fromAmount = amount / exchangeRate;\n    }\n\n  useEffect(()=>{\n    fetch ('https://api.exchangeratesapi.io/latest')\n    .then(response=>response.json())\n    .then(data=>{\n      const firstCurrency = Object.keys(data.rates)[0]\n      console.log(data)\n      setCurrencies([data.base, ...Object.keys(data.rates)])\n      setFromCurrency(data.base)\n      setToCurrency(firstCurrency)\n      setExchangeRate(data.rates[firstCurrency])\n    })\n}, [])\n\nuseEffect(() => {\n  if (fromCurrency && toCurrency) {\n    fetch(`${'https://api.exchangeratesapi.io/latest'}?base=${fromCurrency}&symbols=${toCurrency}`)\n    .then(res=>res.json())\n    .then(data=>setExchangeRate(Number.parseFloat((data.rates[toCurrency])).toPrecision(3)))\n  }\n}, [fromCurrency, toCurrency])\n\nfunction handleFromAmountChange(e) {\n  setAmount(e.target.value)\n  setAmountOfOriginalCurrency(true)\n} \n\nfunction handleToAmountChange(e) {\n  setAmount(e.target.value)\n  setAmountOfOriginalCurrency(false)\n} \n\nlet money = Number.parseFloat(toAmount).toPrecision(3)\n\nconst onButtonSubmit = () => {\n  setText(`Your ${fromAmount}${fromCurrency} is equall to ${money}${toCurrency} as of ${Date()}`)\n}\n  return (\n    <div className=\"Card\">\n      <h1>Currency Converter</h1>\n        <div className=\"row\">\n        <p className=\"label\">Convert</p>\n        <CurrencyRow \n        currencies={currencies}\n        selectedCurrency={fromCurrency}\n        onChangeCurrency={e => setFromCurrency(e.target.value)}\n        amount={fromAmount}\n        onChangeAmount = {handleFromAmountChange}\n        className=\"CurrencyRow\"/>\n        {/* to\n        <CurrencySelector \n        currencies={currencies}\n        selectedCurrency={toCurrency}\n        onChangeCurrency={e => setToCurrency(e.target.value)}\n        /> */}\n        </div>\n  \n        \n        <div className=\"row\">\n          <p>To</p>\n        <CurrencyRow \n        currencies={currencies}\n        selectedCurrency={toCurrency}\n        onChangeCurrency={e => setFromCurrency(e.target.value)}\n        amount={toAmount}\n        onChangeAmount = {handleFromAmountChange}/>\n        </div>\n        <div className=\"sec-row\">\n        </div>\n\n        <div className=\"row\">\n        <p id=\"exch\">\n          Exchange Rate:\n        </p>\n         <div>\n          <input \n            type=\"number\" \n            id=\"exchange-rate\"\n            value={exchangeRate}\n          ></input>\n         </div>\n        </div>\n\n      <button\n      type=\"submit\"\n      onClick={onButtonSubmit}\n      >Exchange</button>\n\n      <p id=\"text\">\n      {text}\n      </p>\n    </div>\n  );\n}\n\nexport default App;","/Users/dmitriifrolov/Desktop/currency-exchanger/src/Components/CurrencyRow/CurrencyRow.js",[],["20","21"],{"ruleId":"22","replacedBy":"23"},{"ruleId":"24","replacedBy":"25"},{"ruleId":"26","severity":1,"message":"27","line":50,"column":10,"nodeType":"28","messageId":"29","endLine":50,"endColumn":30},{"ruleId":"22","replacedBy":"30"},{"ruleId":"24","replacedBy":"31"},"no-native-reassign",["32"],"no-negated-in-lhs",["33"],"no-unused-vars","'handleToAmountChange' is defined but never used.","Identifier","unusedVar",["32"],["33"],"no-global-assign","no-unsafe-negation"]